@model List<MovieTicketReservation.ViewModels.MovieAndScreeningsViewModel>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center" role="alert">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center" role="alert">@TempData["ErrorMessage"]</div>
}

<div class="text-center">
    <h1 class="display-4">Edit Movies</h1>
</div>
<p>
    @Html.ActionLink("Create New Screening", "AddShows")
</p>

@foreach (var item in Model)
{
    <div>
        <div>@item.MovieTitle</div>
        <div>@item.ShowDate.ToString("yyyy-MM-dd HH:mm")</div>
        <div>Hall: @item.Hall</div>
        
        <div class="row">
            <div class="col">
                <!-- Content on the left side -->
            </div>
            <div class="col-auto">
                <div class="btn-group ml-auto">
                    <div class="buttons">@Html.ActionLink("Edit", "EditShows", new{id=item.MovieShowId}, new{@class = "btn btn-primary", @style="color:white;margin-right: 10px"})</div>
                    <div>@Html.ActionLink("Delete", "DeleteShows", new{id=item.MovieShowId}, new{@class = "btn btn-danger", @style="color:white"})</div>
                </div>
            </div>
        </div>

    </div>
    <hr />

}

<script type="text/javascript">
    window.onload = function () {
        setTimeout(function () {
            var alert = document.querySelector('.alert');
            if (alert) {
                alert.style.display = 'none';
            }
        }, 2000);
    };
</script>